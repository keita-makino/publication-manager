### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AffectedRowsOutput {
  count: Int!
}

type Article {
  abstract: String
  authors(cursor: AuthorWhereUniqueInput, skip: Int, take: Int): [Author!]!
  citation: Int!
  date: DateTime!
  id: String!
  journal: Journal
  journalId: String
  name: String!
  sources(cursor: SourceWhereUniqueInput, skip: Int, take: Int): [Source!]!
  status: String!
  tags(cursor: TagWhereUniqueInput, skip: Int, take: Int): [Tag!]!
}

input ArticleCreateInput {
  Project: ProjectCreateNestedOneWithoutArticlesInput
  abstract: String
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  sources: SourceCreateNestedManyWithoutArticlesInput
  status: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateManyJournalInput {
  abstract: String
  citation: Int!
  date: DateTime!
  id: String!
  name: String!
  projectId: String
  status: String!
}

input ArticleCreateManyJournalInputEnvelope {
  data: [ArticleCreateManyJournalInput!]
  skipDuplicates: Boolean
}

input ArticleCreateManyProjectInput {
  abstract: String
  citation: Int!
  date: DateTime!
  id: String!
  journalId: String
  name: String!
  status: String!
}

input ArticleCreateManyProjectInputEnvelope {
  data: [ArticleCreateManyProjectInput!]
  skipDuplicates: Boolean
}

input ArticleCreateNestedManyWithoutAuthorsInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutAuthorsInput!]
  create: [ArticleCreateWithoutAuthorsInput!]
}

input ArticleCreateNestedManyWithoutJournalInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutJournalInput!]
  create: [ArticleCreateWithoutJournalInput!]
  createMany: ArticleCreateManyJournalInputEnvelope
}

input ArticleCreateNestedManyWithoutProjectInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutProjectInput!]
  create: [ArticleCreateWithoutProjectInput!]
  createMany: ArticleCreateManyProjectInputEnvelope
}

input ArticleCreateNestedManyWithoutSourcesInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutSourcesInput!]
  create: [ArticleCreateWithoutSourcesInput!]
}

input ArticleCreateNestedManyWithoutTagsInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutTagsInput!]
  create: [ArticleCreateWithoutTagsInput!]
}

input ArticleCreateOrConnectWithoutAuthorsInput {
  create: ArticleCreateWithoutAuthorsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutJournalInput {
  create: ArticleCreateWithoutJournalInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutProjectInput {
  create: ArticleCreateWithoutProjectInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutSourcesInput {
  create: ArticleCreateWithoutSourcesInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutTagsInput {
  create: ArticleCreateWithoutTagsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateWithoutAuthorsInput {
  Project: ProjectCreateNestedOneWithoutArticlesInput
  abstract: String
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  sources: SourceCreateNestedManyWithoutArticlesInput
  status: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateWithoutJournalInput {
  Project: ProjectCreateNestedOneWithoutArticlesInput
  abstract: String
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  name: String!
  sources: SourceCreateNestedManyWithoutArticlesInput
  status: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateWithoutProjectInput {
  abstract: String
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  sources: SourceCreateNestedManyWithoutArticlesInput
  status: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateWithoutSourcesInput {
  Project: ProjectCreateNestedOneWithoutArticlesInput
  abstract: String
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  status: String!
  tags: TagCreateNestedManyWithoutArticlesInput
}

input ArticleCreateWithoutTagsInput {
  Project: ProjectCreateNestedOneWithoutArticlesInput
  abstract: String
  authors: AuthorCreateNestedManyWithoutArticlesInput
  citation: Int!
  date: DateTime!
  id: String!
  journal: JournalCreateNestedOneWithoutArticlesInput
  name: String!
  sources: SourceCreateNestedManyWithoutArticlesInput
  status: String!
}

input ArticleListRelationFilter {
  every: ArticleWhereInput
  none: ArticleWhereInput
  some: ArticleWhereInput
}

input ArticleOrderByInput {
  abstract: SortOrder
  citation: SortOrder
  date: SortOrder
  id: SortOrder
  journalId: SortOrder
  name: SortOrder
  projectId: SortOrder
  status: SortOrder
}

input ArticleScalarWhereInput {
  AND: [ArticleScalarWhereInput!]
  NOT: [ArticleScalarWhereInput!]
  OR: [ArticleScalarWhereInput!]
  abstract: StringNullableFilter
  citation: IntFilter
  date: DateTimeFilter
  id: StringFilter
  journalId: StringNullableFilter
  name: StringFilter
  projectId: StringNullableFilter
  status: StringFilter
}

input ArticleUpdateInput {
  Project: ProjectUpdateOneWithoutArticlesInput
  abstract: NullableStringFieldUpdateOperationsInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  sources: SourceUpdateManyWithoutArticlesInput
  status: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateManyMutationInput {
  abstract: NullableStringFieldUpdateOperationsInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
}

input ArticleUpdateManyWithWhereWithoutAuthorsInput {
  data: ArticleUpdateManyMutationInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateManyWithWhereWithoutJournalInput {
  data: ArticleUpdateManyMutationInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateManyWithWhereWithoutProjectInput {
  data: ArticleUpdateManyMutationInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateManyWithWhereWithoutSourcesInput {
  data: ArticleUpdateManyMutationInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateManyWithWhereWithoutTagsInput {
  data: ArticleUpdateManyMutationInput!
  where: ArticleScalarWhereInput!
}

input ArticleUpdateManyWithoutAuthorsInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutAuthorsInput!]
  create: [ArticleCreateWithoutAuthorsInput!]
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutAuthorsInput!]
  updateMany: [ArticleUpdateManyWithWhereWithoutAuthorsInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutAuthorsInput!]
}

input ArticleUpdateManyWithoutJournalInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutJournalInput!]
  create: [ArticleCreateWithoutJournalInput!]
  createMany: ArticleCreateManyJournalInputEnvelope
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutJournalInput!]
  updateMany: [ArticleUpdateManyWithWhereWithoutJournalInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutJournalInput!]
}

input ArticleUpdateManyWithoutProjectInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutProjectInput!]
  create: [ArticleCreateWithoutProjectInput!]
  createMany: ArticleCreateManyProjectInputEnvelope
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ArticleUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutProjectInput!]
}

input ArticleUpdateManyWithoutSourcesInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutSourcesInput!]
  create: [ArticleCreateWithoutSourcesInput!]
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutSourcesInput!]
  updateMany: [ArticleUpdateManyWithWhereWithoutSourcesInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutSourcesInput!]
}

input ArticleUpdateManyWithoutTagsInput {
  connect: [ArticleWhereUniqueInput!]
  connectOrCreate: [ArticleCreateOrConnectWithoutTagsInput!]
  create: [ArticleCreateWithoutTagsInput!]
  delete: [ArticleWhereUniqueInput!]
  deleteMany: [ArticleScalarWhereInput!]
  disconnect: [ArticleWhereUniqueInput!]
  set: [ArticleWhereUniqueInput!]
  update: [ArticleUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [ArticleUpdateManyWithWhereWithoutTagsInput!]
  upsert: [ArticleUpsertWithWhereUniqueWithoutTagsInput!]
}

input ArticleUpdateWithWhereUniqueWithoutAuthorsInput {
  data: ArticleUpdateWithoutAuthorsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpdateWithWhereUniqueWithoutJournalInput {
  data: ArticleUpdateWithoutJournalInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpdateWithWhereUniqueWithoutProjectInput {
  data: ArticleUpdateWithoutProjectInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpdateWithWhereUniqueWithoutSourcesInput {
  data: ArticleUpdateWithoutSourcesInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpdateWithWhereUniqueWithoutTagsInput {
  data: ArticleUpdateWithoutTagsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpdateWithoutAuthorsInput {
  Project: ProjectUpdateOneWithoutArticlesInput
  abstract: NullableStringFieldUpdateOperationsInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  sources: SourceUpdateManyWithoutArticlesInput
  status: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateWithoutJournalInput {
  Project: ProjectUpdateOneWithoutArticlesInput
  abstract: NullableStringFieldUpdateOperationsInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sources: SourceUpdateManyWithoutArticlesInput
  status: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateWithoutProjectInput {
  abstract: NullableStringFieldUpdateOperationsInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  sources: SourceUpdateManyWithoutArticlesInput
  status: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateWithoutSourcesInput {
  Project: ProjectUpdateOneWithoutArticlesInput
  abstract: NullableStringFieldUpdateOperationsInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutArticlesInput
}

input ArticleUpdateWithoutTagsInput {
  Project: ProjectUpdateOneWithoutArticlesInput
  abstract: NullableStringFieldUpdateOperationsInput
  authors: AuthorUpdateManyWithoutArticlesInput
  citation: IntFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  journal: JournalUpdateOneWithoutArticlesInput
  name: StringFieldUpdateOperationsInput
  sources: SourceUpdateManyWithoutArticlesInput
  status: StringFieldUpdateOperationsInput
}

input ArticleUpsertWithWhereUniqueWithoutAuthorsInput {
  create: ArticleCreateWithoutAuthorsInput!
  update: ArticleUpdateWithoutAuthorsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpsertWithWhereUniqueWithoutJournalInput {
  create: ArticleCreateWithoutJournalInput!
  update: ArticleUpdateWithoutJournalInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpsertWithWhereUniqueWithoutProjectInput {
  create: ArticleCreateWithoutProjectInput!
  update: ArticleUpdateWithoutProjectInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpsertWithWhereUniqueWithoutSourcesInput {
  create: ArticleCreateWithoutSourcesInput!
  update: ArticleUpdateWithoutSourcesInput!
  where: ArticleWhereUniqueInput!
}

input ArticleUpsertWithWhereUniqueWithoutTagsInput {
  create: ArticleCreateWithoutTagsInput!
  update: ArticleUpdateWithoutTagsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  Project: ProjectWhereInput
  abstract: StringNullableFilter
  authors: AuthorListRelationFilter
  citation: IntFilter
  date: DateTimeFilter
  id: StringFilter
  journal: JournalWhereInput
  journalId: StringNullableFilter
  name: StringFilter
  projectId: StringNullableFilter
  sources: SourceListRelationFilter
  status: StringFilter
  tags: TagListRelationFilter
}

input ArticleWhereUniqueInput {
  id: String
}

type Auth {
  token: String
  user: User
}

type Author {
  articles(cursor: ArticleWhereUniqueInput, skip: Int, take: Int): [Article!]!
  groups(cursor: GroupWhereUniqueInput, skip: Int, take: Int): [Group!]!
  id: String!
  name: String!
}

input AuthorCreateInput {
  articles: ArticleCreateNestedManyWithoutAuthorsInput
  groups: GroupCreateNestedManyWithoutAuthorsInput
  id: String!
  name: String!
}

input AuthorCreateNestedManyWithoutArticlesInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutArticlesInput!]
  create: [AuthorCreateWithoutArticlesInput!]
}

input AuthorCreateNestedManyWithoutGroupsInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutGroupsInput!]
  create: [AuthorCreateWithoutGroupsInput!]
}

input AuthorCreateOrConnectWithoutArticlesInput {
  create: AuthorCreateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateOrConnectWithoutGroupsInput {
  create: AuthorCreateWithoutGroupsInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateWithoutArticlesInput {
  groups: GroupCreateNestedManyWithoutAuthorsInput
  id: String!
  name: String!
}

input AuthorCreateWithoutGroupsInput {
  articles: ArticleCreateNestedManyWithoutAuthorsInput
  id: String!
  name: String!
}

input AuthorListRelationFilter {
  every: AuthorWhereInput
  none: AuthorWhereInput
  some: AuthorWhereInput
}

input AuthorOrderByInput {
  id: SortOrder
  name: SortOrder
}

input AuthorScalarWhereInput {
  AND: [AuthorScalarWhereInput!]
  NOT: [AuthorScalarWhereInput!]
  OR: [AuthorScalarWhereInput!]
  id: StringFilter
  name: StringFilter
}

input AuthorUpdateInput {
  articles: ArticleUpdateManyWithoutAuthorsInput
  groups: GroupUpdateManyWithoutAuthorsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpdateManyWithWhereWithoutArticlesInput {
  data: AuthorUpdateManyMutationInput!
  where: AuthorScalarWhereInput!
}

input AuthorUpdateManyWithWhereWithoutGroupsInput {
  data: AuthorUpdateManyMutationInput!
  where: AuthorScalarWhereInput!
}

input AuthorUpdateManyWithoutArticlesInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutArticlesInput!]
  create: [AuthorCreateWithoutArticlesInput!]
  delete: [AuthorWhereUniqueInput!]
  deleteMany: [AuthorScalarWhereInput!]
  disconnect: [AuthorWhereUniqueInput!]
  set: [AuthorWhereUniqueInput!]
  update: [AuthorUpdateWithWhereUniqueWithoutArticlesInput!]
  updateMany: [AuthorUpdateManyWithWhereWithoutArticlesInput!]
  upsert: [AuthorUpsertWithWhereUniqueWithoutArticlesInput!]
}

input AuthorUpdateManyWithoutGroupsInput {
  connect: [AuthorWhereUniqueInput!]
  connectOrCreate: [AuthorCreateOrConnectWithoutGroupsInput!]
  create: [AuthorCreateWithoutGroupsInput!]
  delete: [AuthorWhereUniqueInput!]
  deleteMany: [AuthorScalarWhereInput!]
  disconnect: [AuthorWhereUniqueInput!]
  set: [AuthorWhereUniqueInput!]
  update: [AuthorUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [AuthorUpdateManyWithWhereWithoutGroupsInput!]
  upsert: [AuthorUpsertWithWhereUniqueWithoutGroupsInput!]
}

input AuthorUpdateWithWhereUniqueWithoutArticlesInput {
  data: AuthorUpdateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorUpdateWithWhereUniqueWithoutGroupsInput {
  data: AuthorUpdateWithoutGroupsInput!
  where: AuthorWhereUniqueInput!
}

input AuthorUpdateWithoutArticlesInput {
  groups: GroupUpdateManyWithoutAuthorsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpdateWithoutGroupsInput {
  articles: ArticleUpdateManyWithoutAuthorsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input AuthorUpsertWithWhereUniqueWithoutArticlesInput {
  create: AuthorCreateWithoutArticlesInput!
  update: AuthorUpdateWithoutArticlesInput!
  where: AuthorWhereUniqueInput!
}

input AuthorUpsertWithWhereUniqueWithoutGroupsInput {
  create: AuthorCreateWithoutGroupsInput!
  update: AuthorUpdateWithoutGroupsInput!
  where: AuthorWhereUniqueInput!
}

input AuthorWhereInput {
  AND: [AuthorWhereInput!]
  NOT: [AuthorWhereInput!]
  OR: [AuthorWhereInput!]
  articles: ArticleListRelationFilter
  groups: GroupListRelationFilter
  id: StringFilter
  name: StringFilter
}

input AuthorWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

type Group {
  authors(cursor: AuthorWhereUniqueInput, skip: Int, take: Int): [Author!]!
  id: String!
  name: String!
}

input GroupCreateInput {
  authors: AuthorCreateNestedManyWithoutGroupsInput
  id: String!
  name: String!
  tags: TagCreateNestedManyWithoutGroupsInput
}

input GroupCreateNestedManyWithoutAuthorsInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutAuthorsInput!]
  create: [GroupCreateWithoutAuthorsInput!]
}

input GroupCreateNestedManyWithoutTagsInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutTagsInput!]
  create: [GroupCreateWithoutTagsInput!]
}

input GroupCreateOrConnectWithoutAuthorsInput {
  create: GroupCreateWithoutAuthorsInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutTagsInput {
  create: GroupCreateWithoutTagsInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutAuthorsInput {
  id: String!
  name: String!
  tags: TagCreateNestedManyWithoutGroupsInput
}

input GroupCreateWithoutTagsInput {
  authors: AuthorCreateNestedManyWithoutGroupsInput
  id: String!
  name: String!
}

input GroupListRelationFilter {
  every: GroupWhereInput
  none: GroupWhereInput
  some: GroupWhereInput
}

input GroupOrderByInput {
  id: SortOrder
  name: SortOrder
}

input GroupScalarWhereInput {
  AND: [GroupScalarWhereInput!]
  NOT: [GroupScalarWhereInput!]
  OR: [GroupScalarWhereInput!]
  id: StringFilter
  name: StringFilter
}

input GroupUpdateInput {
  authors: AuthorUpdateManyWithoutGroupsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutGroupsInput
}

input GroupUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input GroupUpdateManyWithWhereWithoutAuthorsInput {
  data: GroupUpdateManyMutationInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateManyWithWhereWithoutTagsInput {
  data: GroupUpdateManyMutationInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateManyWithoutAuthorsInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutAuthorsInput!]
  create: [GroupCreateWithoutAuthorsInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutAuthorsInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutAuthorsInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutAuthorsInput!]
}

input GroupUpdateManyWithoutTagsInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutTagsInput!]
  create: [GroupCreateWithoutTagsInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutTagsInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutTagsInput!]
}

input GroupUpdateWithWhereUniqueWithoutAuthorsInput {
  data: GroupUpdateWithoutAuthorsInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithWhereUniqueWithoutTagsInput {
  data: GroupUpdateWithoutTagsInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithoutAuthorsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutGroupsInput
}

input GroupUpdateWithoutTagsInput {
  authors: AuthorUpdateManyWithoutGroupsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input GroupUpsertWithWhereUniqueWithoutAuthorsInput {
  create: GroupCreateWithoutAuthorsInput!
  update: GroupUpdateWithoutAuthorsInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutTagsInput {
  create: GroupCreateWithoutTagsInput!
  update: GroupUpdateWithoutTagsInput!
  where: GroupWhereUniqueInput!
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  authors: AuthorListRelationFilter
  id: StringFilter
  name: StringFilter
  tags: TagListRelationFilter
}

input GroupWhereUniqueInput {
  id: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Journal {
  articles(cursor: ArticleWhereUniqueInput, skip: Int, take: Int): [Article!]!
  id: String!
  name: String!
}

input JournalCreateInput {
  articles: ArticleCreateNestedManyWithoutJournalInput
  id: String!
  name: String!
}

input JournalCreateNestedOneWithoutArticlesInput {
  connect: JournalWhereUniqueInput
  connectOrCreate: JournalCreateOrConnectWithoutArticlesInput
  create: JournalCreateWithoutArticlesInput
}

input JournalCreateOrConnectWithoutArticlesInput {
  create: JournalCreateWithoutArticlesInput!
  where: JournalWhereUniqueInput!
}

input JournalCreateWithoutArticlesInput {
  id: String!
  name: String!
}

input JournalOrderByInput {
  id: SortOrder
  name: SortOrder
}

input JournalUpdateInput {
  articles: ArticleUpdateManyWithoutJournalInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input JournalUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input JournalUpdateOneWithoutArticlesInput {
  connect: JournalWhereUniqueInput
  connectOrCreate: JournalCreateOrConnectWithoutArticlesInput
  create: JournalCreateWithoutArticlesInput
  delete: Boolean
  disconnect: Boolean
  update: JournalUpdateWithoutArticlesInput
  upsert: JournalUpsertWithoutArticlesInput
}

input JournalUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input JournalUpsertWithoutArticlesInput {
  create: JournalCreateWithoutArticlesInput!
  update: JournalUpdateWithoutArticlesInput!
}

input JournalWhereInput {
  AND: [JournalWhereInput!]
  NOT: [JournalWhereInput!]
  OR: [JournalWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  name: StringFilter
}

input JournalWhereUniqueInput {
  id: String
}

type Mutation {
  createOneArticle(data: ArticleCreateInput!): Article!
  createOneAuthor(data: AuthorCreateInput!): Author!
  createOneGroup(data: GroupCreateInput!): Group!
  createOneJournal(data: JournalCreateInput!): Journal!
  createOneProject(data: ProjectCreateInput!): Project!
  createOneSource(data: SourceCreateInput!): Source!
  createOneTag(data: TagCreateInput!): Tag!
  deleteManyArticle(where: ArticleWhereInput): AffectedRowsOutput!
  deleteManyAuthor(where: AuthorWhereInput): AffectedRowsOutput!
  deleteManyGroup(where: GroupWhereInput): AffectedRowsOutput!
  deleteManyJournal(where: JournalWhereInput): AffectedRowsOutput!
  deleteManyProject(where: ProjectWhereInput): AffectedRowsOutput!
  deleteManySource(where: SourceWhereInput): AffectedRowsOutput!
  deleteManyTag(where: TagWhereInput): AffectedRowsOutput!
  deleteOneArticle(where: ArticleWhereUniqueInput!): Article
  deleteOneAuthor(where: AuthorWhereUniqueInput!): Author
  deleteOneGroup(where: GroupWhereUniqueInput!): Group
  deleteOneJournal(where: JournalWhereUniqueInput!): Journal
  deleteOneProject(where: ProjectWhereUniqueInput!): Project
  deleteOneSource(where: SourceWhereUniqueInput!): Source
  deleteOneTag(where: TagWhereUniqueInput!): Tag
  login(email: String!): Auth
  updateManyArticle(data: ArticleUpdateManyMutationInput!, where: ArticleWhereInput): AffectedRowsOutput!
  updateManyAuthor(data: AuthorUpdateManyMutationInput!, where: AuthorWhereInput): AffectedRowsOutput!
  updateManyGroup(data: GroupUpdateManyMutationInput!, where: GroupWhereInput): AffectedRowsOutput!
  updateManyJournal(data: JournalUpdateManyMutationInput!, where: JournalWhereInput): AffectedRowsOutput!
  updateManyProject(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): AffectedRowsOutput!
  updateManySource(data: SourceUpdateManyMutationInput!, where: SourceWhereInput): AffectedRowsOutput!
  updateManyTag(data: TagUpdateManyMutationInput!, where: TagWhereInput): AffectedRowsOutput!
  updateOneArticle(data: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article
  updateOneAuthor(data: AuthorUpdateInput!, where: AuthorWhereUniqueInput!): Author
  updateOneGroup(data: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group
  updateOneJournal(data: JournalUpdateInput!, where: JournalWhereUniqueInput!): Journal
  updateOneProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateOneSource(data: SourceUpdateInput!, where: SourceWhereUniqueInput!): Source
  updateOneTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  upsertOneArticle(create: ArticleCreateInput!, update: ArticleUpdateInput!, where: ArticleWhereUniqueInput!): Article!
  upsertOneAuthor(create: AuthorCreateInput!, update: AuthorUpdateInput!, where: AuthorWhereUniqueInput!): Author!
  upsertOneGroup(create: GroupCreateInput!, update: GroupUpdateInput!, where: GroupWhereUniqueInput!): Group!
  upsertOneJournal(create: JournalCreateInput!, update: JournalUpdateInput!, where: JournalWhereUniqueInput!): Journal!
  upsertOneProject(create: ProjectCreateInput!, update: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project!
  upsertOneSource(create: SourceCreateInput!, update: SourceUpdateInput!, where: SourceWhereUniqueInput!): Source!
  upsertOneTag(create: TagCreateInput!, update: TagUpdateInput!, where: TagWhereUniqueInput!): Tag!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Project {
  articles(cursor: ArticleWhereUniqueInput, skip: Int, take: Int): [Article!]!
  id: String!
  name: String!
}

input ProjectCreateInput {
  articles: ArticleCreateNestedManyWithoutProjectInput
  id: String!
  name: String!
}

input ProjectCreateNestedOneWithoutArticlesInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutArticlesInput
  create: ProjectCreateWithoutArticlesInput
}

input ProjectCreateOrConnectWithoutArticlesInput {
  create: ProjectCreateWithoutArticlesInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateWithoutArticlesInput {
  id: String!
  name: String!
}

input ProjectOrderByInput {
  id: SortOrder
  name: SortOrder
}

input ProjectUpdateInput {
  articles: ArticleUpdateManyWithoutProjectInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProjectUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProjectUpdateOneWithoutArticlesInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutArticlesInput
  create: ProjectCreateWithoutArticlesInput
  delete: Boolean
  disconnect: Boolean
  update: ProjectUpdateWithoutArticlesInput
  upsert: ProjectUpsertWithoutArticlesInput
}

input ProjectUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input ProjectUpsertWithoutArticlesInput {
  create: ProjectCreateWithoutArticlesInput!
  update: ProjectUpdateWithoutArticlesInput!
}

input ProjectWhereInput {
  AND: [ProjectWhereInput!]
  NOT: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  name: StringFilter
}

input ProjectWhereUniqueInput {
  id: String
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articles(cursor: ArticleWhereUniqueInput, orderBy: [ArticleOrderByInput!], skip: Int, take: Int, where: ArticleWhereInput): [Article!]!
  articlesCount(cursor: ArticleWhereUniqueInput, orderBy: ArticleOrderByInput, skip: Int, take: Int, where: ArticleWhereInput): Int
  author(where: AuthorWhereUniqueInput!): Author
  authors(cursor: AuthorWhereUniqueInput, orderBy: [AuthorOrderByInput!], skip: Int, take: Int, where: AuthorWhereInput): [Author!]!
  authorsCount(cursor: AuthorWhereUniqueInput, orderBy: AuthorOrderByInput, skip: Int, take: Int, where: AuthorWhereInput): Int
  group(where: GroupWhereUniqueInput!): Group
  groups(cursor: GroupWhereUniqueInput, orderBy: [GroupOrderByInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  groupsCount(cursor: GroupWhereUniqueInput, orderBy: GroupOrderByInput, skip: Int, take: Int, where: GroupWhereInput): Int
  journal(where: JournalWhereUniqueInput!): Journal
  journals(cursor: JournalWhereUniqueInput, orderBy: [JournalOrderByInput!], skip: Int, take: Int, where: JournalWhereInput): [Journal!]!
  journalsCount(cursor: JournalWhereUniqueInput, orderBy: JournalOrderByInput, skip: Int, take: Int, where: JournalWhereInput): Int
  multipleArticles(author: String, journal: String, project: String, skip: Int, tag: String, take: Int, yearEnd: Int, yearStart: Int): [Article]
  project(where: ProjectWhereUniqueInput!): Project
  projects(cursor: ProjectWhereUniqueInput, orderBy: [ProjectOrderByInput!], skip: Int, take: Int, where: ProjectWhereInput): [Project!]!
  projectsCount(cursor: ProjectWhereUniqueInput, orderBy: ProjectOrderByInput, skip: Int, take: Int, where: ProjectWhereInput): Int
  source(where: SourceWhereUniqueInput!): Source
  sources(cursor: SourceWhereUniqueInput, orderBy: [SourceOrderByInput!], skip: Int, take: Int, where: SourceWhereInput): [Source!]!
  sourcesCount(cursor: SourceWhereUniqueInput, orderBy: SourceOrderByInput, skip: Int, take: Int, where: SourceWhereInput): Int
  tag(where: TagWhereUniqueInput!): Tag
  tags(cursor: TagWhereUniqueInput, orderBy: [TagOrderByInput!], skip: Int, take: Int, where: TagWhereInput): [Tag!]!
  tagsCount(cursor: TagWhereUniqueInput, orderBy: TagOrderByInput, skip: Int, take: Int, where: TagWhereInput): Int
}

enum SortOrder {
  asc
  desc
}

type Source {
  articles(cursor: ArticleWhereUniqueInput, skip: Int, take: Int): [Article!]!
  id: String!
  type: String!
}

input SourceCreateInput {
  articles: ArticleCreateNestedManyWithoutSourcesInput
  id: String!
  type: String!
}

input SourceCreateNestedManyWithoutArticlesInput {
  connect: [SourceWhereUniqueInput!]
  connectOrCreate: [SourceCreateOrConnectWithoutArticlesInput!]
  create: [SourceCreateWithoutArticlesInput!]
}

input SourceCreateOrConnectWithoutArticlesInput {
  create: SourceCreateWithoutArticlesInput!
  where: SourceWhereUniqueInput!
}

input SourceCreateWithoutArticlesInput {
  id: String!
  type: String!
}

input SourceListRelationFilter {
  every: SourceWhereInput
  none: SourceWhereInput
  some: SourceWhereInput
}

input SourceOrderByInput {
  id: SortOrder
  type: SortOrder
}

input SourceScalarWhereInput {
  AND: [SourceScalarWhereInput!]
  NOT: [SourceScalarWhereInput!]
  OR: [SourceScalarWhereInput!]
  id: StringFilter
  type: StringFilter
}

input SourceUpdateInput {
  articles: ArticleUpdateManyWithoutSourcesInput
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input SourceUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input SourceUpdateManyWithWhereWithoutArticlesInput {
  data: SourceUpdateManyMutationInput!
  where: SourceScalarWhereInput!
}

input SourceUpdateManyWithoutArticlesInput {
  connect: [SourceWhereUniqueInput!]
  connectOrCreate: [SourceCreateOrConnectWithoutArticlesInput!]
  create: [SourceCreateWithoutArticlesInput!]
  delete: [SourceWhereUniqueInput!]
  deleteMany: [SourceScalarWhereInput!]
  disconnect: [SourceWhereUniqueInput!]
  set: [SourceWhereUniqueInput!]
  update: [SourceUpdateWithWhereUniqueWithoutArticlesInput!]
  updateMany: [SourceUpdateManyWithWhereWithoutArticlesInput!]
  upsert: [SourceUpsertWithWhereUniqueWithoutArticlesInput!]
}

input SourceUpdateWithWhereUniqueWithoutArticlesInput {
  data: SourceUpdateWithoutArticlesInput!
  where: SourceWhereUniqueInput!
}

input SourceUpdateWithoutArticlesInput {
  id: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input SourceUpsertWithWhereUniqueWithoutArticlesInput {
  create: SourceCreateWithoutArticlesInput!
  update: SourceUpdateWithoutArticlesInput!
  where: SourceWhereUniqueInput!
}

input SourceWhereInput {
  AND: [SourceWhereInput!]
  NOT: [SourceWhereInput!]
  OR: [SourceWhereInput!]
  articles: ArticleListRelationFilter
  id: StringFilter
  type: StringFilter
}

input SourceWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  articles(cursor: ArticleWhereUniqueInput, skip: Int, take: Int): [Article!]!
  id: String!
  name: String!
}

input TagCreateInput {
  articles: ArticleCreateNestedManyWithoutTagsInput
  groups: GroupCreateNestedManyWithoutTagsInput
  id: String!
  name: String!
}

input TagCreateNestedManyWithoutArticlesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutArticlesInput!]
  create: [TagCreateWithoutArticlesInput!]
}

input TagCreateNestedManyWithoutGroupsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutGroupsInput!]
  create: [TagCreateWithoutGroupsInput!]
}

input TagCreateOrConnectWithoutArticlesInput {
  create: TagCreateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutGroupsInput {
  create: TagCreateWithoutGroupsInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutArticlesInput {
  groups: GroupCreateNestedManyWithoutTagsInput
  id: String!
  name: String!
}

input TagCreateWithoutGroupsInput {
  articles: ArticleCreateNestedManyWithoutTagsInput
  id: String!
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagOrderByInput {
  id: SortOrder
  name: SortOrder
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  id: StringFilter
  name: StringFilter
}

input TagUpdateInput {
  articles: ArticleUpdateManyWithoutTagsInput
  groups: GroupUpdateManyWithoutTagsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutArticlesInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithWhereWithoutGroupsInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutArticlesInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutArticlesInput!]
  create: [TagCreateWithoutArticlesInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutArticlesInput!]
  updateMany: [TagUpdateManyWithWhereWithoutArticlesInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutArticlesInput!]
}

input TagUpdateManyWithoutGroupsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutGroupsInput!]
  create: [TagCreateWithoutGroupsInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [TagUpdateManyWithWhereWithoutGroupsInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutGroupsInput!]
}

input TagUpdateWithWhereUniqueWithoutArticlesInput {
  data: TagUpdateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutGroupsInput {
  data: TagUpdateWithoutGroupsInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutArticlesInput {
  groups: GroupUpdateManyWithoutTagsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateWithoutGroupsInput {
  articles: ArticleUpdateManyWithoutTagsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutArticlesInput {
  create: TagCreateWithoutArticlesInput!
  update: TagUpdateWithoutArticlesInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutGroupsInput {
  create: TagCreateWithoutGroupsInput!
  update: TagUpdateWithoutGroupsInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  articles: ArticleListRelationFilter
  groups: GroupListRelationFilter
  id: StringFilter
  name: StringFilter
}

input TagWhereUniqueInput {
  id: String
}

type User {
  email: String!
  id: String!
  name: String!
}
